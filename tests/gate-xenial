#!/usr/bin/env python

import os
import unittest
import amulet


class TestCharm(unittest.TestCase):

    def setUp(self):
        self.charm_name = os.environ.get('CHARM_NAME')
        self.charm_build_dir = os.environ.get('CHARM_BUILD_DIR')
        self.charm_build_dir = os.environ.get('CHARM_BUILD_DIR')

        self.d = amulet.Deployment(series='xenial')
        self.d.add(charm_name, os.path.join(charm_build_dir, charm_name))
        self.d.setup(timeout=900)
        self.d.sentry.wait(timeout=900)
        self.unit = self.d.sentry[charm_name][0]

    def test_change_config(self):
        # self.d.configure(charm_name, {
        #     'slurmd_debug': 'debug',
        # })
        self.d.sentry.wait(timeout=900)
        # Now you can use self.d.sentry[SERVICE][UNIT] to address each of the units and perform
        # more in-depth steps. Each self.d.sentry[SERVICE][UNIT] has the following methods:
        # - .info - An array of the information of that unit from Juju
        # - .file(PATH) - Get the details of a file on that unit
        # - .file_contents(PATH) - Get plain text output of PATH file from that unit
        # - .directory(PATH) - Get details of directory
        # - .directory_contents(PATH) - List files and folders in PATH on that unit
        # - .relation(relation, service:rel) - Get relation data from return service


if __name__ == '__main__':
    unittest.main()
